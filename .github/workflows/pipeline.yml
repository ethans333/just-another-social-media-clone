name: Terraform, ECR Push

on:
  push:
    branches:
      - master
jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    outputs:
      ecr_repo: ${{ steps.get-output.outputs.ecr_repo }}

    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve tfplan

      - name: Debug terraform output
        run: terraform output

      - name: Extract ECR Repository URL
        id: get-output
        run: |
          ECR_REPO=$(terraform output -raw ecr_repo)
          echo "ecr_repo=$ECR_REPO" >> $GITHUB_OUTPUT

  docker:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Frontend & Backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: ${{ needs.terraform.outputs.ecr_repo }}
        run: |
          FRONTEND_IMAGE_URI="$ECR_REGISTRY/$ECR_REPO/frontend:latest"
          BACKEND_IMAGE_URI="$ECR_REGISTRY/$ECR_REPO/backend:latest"

          docker build -t $FRONTEND_IMAGE_URI .
          docker push $FRONTEND_IMAGE_URI
          docker build -t $BACKEND_IMAGE_URI -f Dockerfile.backend .
          docker push $BACKEND_IMAGE_URI
